# https://www.sqlite.org/lang.html

sql = statement_or_query semicolon? eof;
statement_or_query =
  | SELECT => select
  | VALUES => values
  | CREATE => create
  | INSERT => insert;
create =
  | (CREATE TABLE) => create_table;
create_table = CREATE TABLE name open_paren column_specs close_paren;
insert = INSERT INTO name open_paren column_specs close_paren table_expr;
table_expr = 
  | VALUES => values;
values = VALUES open_paren exprs close_paren;
column_specs = column_spec*comma;
column_spec = name typ?;
typ = name;
select = SELECT distinct_or_all? result_columns from? where? group_by? having? window? order_by? limit?;
distinct_or_all =
  | DISTINCT
  | ALL;
result_columns = result_column*comma;
result_column = expr; # TODO
from = FROM tables_or_subqueries_or_join*;
table_or_subquery_or_join =
  | tables_or_subqueries
  | join_clause;
tables_or_subqueries = table_or_subquery+comma;
table_or_subquery = TODO;
where = WHERE expr;
group_by = GROUP BY exprs;
having = HAVING expr;
window = WINDOW TODO;
order_by = ORDER BY ordering_term;
ordering_term = expr;
limit = LIMIT exprs; # TODO offset
exprs = expr*comma;
expr = # TODO
  | CASE => case
  | function_call
  | value;
case = CASE expr case_when* case_else? END;
case_when = WHEN expr=when THEN expr=then;
case_else = ELSE expr;
function_call = function_name open_paren function_args? close_paren; # TODO filter/over
function_name = name; # TODO
function_args =
  | (DISTINCT? expr+comma)=args
  | star;
value =
  | number
  | string;

tokens =
  | less_than
  | greater_than
  | less_than_or_equal
  | greater_than_or_equal
  | not_less_than
  | not_greater_than
  | equal
  | double_equal
  | not_equal
  | plus
  | minus
  | star
  | forward_slash
  | dot
  | modulus
  | bitwise_and
  | bitwise_or
  | bitwise_not
  | string_concat
  | shift_left
  | shift_right
;
